import io.github.bonigarcia.wdm.WebDriverManager;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import java.io.File;
import java.io.FileNotFoundException;
import java.time.Duration;
import java.util.List;

public class TestNhapKhacXuatKhac {

    WebDriver driver;
    WebDriverWait wait;

    @BeforeMethod
    public void setup() {
        WebDriverManager.chromedriver().setup();

        ChromeOptions options = new ChromeOptions();
        // options.addArguments("--headless"); // B·ªè comment n·∫øu mu·ªën ch·∫°y kh√¥ng giao di·ªán
        options.addArguments("--disable-notifications"); // Disable notifications
        options.addArguments("--start-maximized"); // Start maximized
        driver = new ChromeDriver(options);
        driver.manage().window().maximize();
        wait = new WebDriverWait(driver, Duration.ofSeconds(40));
    }

    // ‚úÖ Test login v√† upload file trong 1 test
    @Test
    public void testLoginAndImportFile() throws FileNotFoundException, InterruptedException {
        try {
            // üëâ Truy c·∫≠p trang ƒëƒÉng nh·∫≠p
            System.out.println("ƒêang truy c·∫≠p trang ƒëƒÉng nh·∫≠p...");
            driver.get("https://ci-eho-web.frt.vn/");
            System.out.println("URL hi·ªán t·∫°i: " + driver.getCurrentUrl());

            // Ch·ª•p m√†n h√¨nh sau khi load trang
            takeScreenshot("after_page_load");

            // üëâ Nh·∫≠p t√†i kho·∫£n
            System.out.println("ƒêang t√¨m √¥ nh·∫≠p t√†i kho·∫£n...");
            WebElement taikhoanbox = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//input[@formcontrolname='employee_code']")));
            taikhoanbox.clear();
            taikhoanbox.sendKeys("Ngocdtm3");
            System.out.println("ƒê√£ nh·∫≠p t√†i kho·∫£n");

            // üëâ Nh·∫≠p m·∫≠t kh·∫©u
            System.out.println("ƒêang t√¨m √¥ nh·∫≠p m·∫≠t kh·∫©u...");
            WebElement passwordbox = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//input[@formcontrolname='password']")));
            passwordbox.clear();
            passwordbox.sendKeys("1234567");
            System.out.println("ƒê√£ nh·∫≠p m·∫≠t kh·∫©u");

            // üëâ Click ƒëƒÉng nh·∫≠p
            System.out.println("ƒêang t√¨m n√∫t ƒëƒÉng nh·∫≠p...");
            WebElement dangnhapbox = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//button[@id='kt_login_signin_submit']")));
            dangnhapbox.click();
            System.out.println("ƒê√£ click n√∫t ƒëƒÉng nh·∫≠p");

            // Th√™m ch·ªù sau khi ƒëƒÉng nh·∫≠p th√†nh c√¥ng
            System.out.println("ƒêang ch·ªù header xu·∫•t hi·ªán sau ƒëƒÉng nh·∫≠p...");
            wait.until(ExpectedConditions.presenceOfElementLocated(
                By.xpath("//header[contains(@class, 'ant-layout-header')]")));
            System.out.println("ƒê√£ ch·ªù header xu·∫•t hi·ªán sau ƒëƒÉng nh·∫≠p.");

            // Ch·ª•p m√†n h√¨nh sau khi ƒëƒÉng nh·∫≠p
            takeScreenshot("after_login");

            // üëâ Ch·ªçn menu "Nh·∫≠p kh√°c xu·∫•t kh√°c"
            System.out.println("ƒêang t√¨m menu Nh·∫≠p kh√°c xu·∫•t kh√°c...");
            WebElement menuNhapXuatKhac = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//span[contains(text(),'Nh·∫≠p kh√°c xu·∫•t kh√°c')]/parent::li")));
            menuNhapXuatKhac.click();
            System.out.println("ƒê√£ click menu Nh·∫≠p kh√°c xu·∫•t kh√°c");

            // Ch·ª•p m√†n h√¨nh sau khi click menu
            takeScreenshot("after_menu_click");

            // Ch·ªù cho m·ªôt element ƒë·∫∑c tr∆∞ng c·ªßa trang Nh·∫≠p kh√°c xu·∫•t kh√°c xu·∫•t hi·ªán
            System.out.println("B·∫Øt ƒë·∫ßu ch·ªù √¥ t√¨m ki·∫øm M√£ phi·∫øu...");
            try {
                WebElement maPhieuSearchInput = wait.until(ExpectedConditions.elementToBeClickable(
                        By.xpath("//input[contains(@placeholder,'T√¨m ki·∫øm')]")));
                System.out.println("ƒê√£ ch·ªù √¥ t√¨m ki·∫øm xu·∫•t hi·ªán v√† c√≥ th·ªÉ click.");
            } catch (TimeoutException e) {
                System.out.println("Kh√¥ng t√¨m th·∫•y √¥ t√¨m ki·∫øm, ch·ª•p m√†n h√¨nh ƒë·ªÉ debug...");
                takeScreenshot("search_input_not_found");
                throw e;
            }

            // ƒê·ª£i v√† x·ª≠ l√Ω th√¥ng b√°o n·∫øu c√≥
            try {
                WebElement notification = wait.until(ExpectedConditions.presenceOfElementLocated(
                    By.xpath("//div[contains(@class,'ant-notification')]")));
                System.out.println("T√¨m th·∫•y th√¥ng b√°o: " + notification.getText());
                wait.until(ExpectedConditions.invisibilityOf(notification));
                System.out.println("ƒê√£ x·ª≠ l√Ω th√¥ng b√°o.");
            } catch (TimeoutException e) {
                System.out.println("Kh√¥ng c√≥ th√¥ng b√°o n√†o xu·∫•t hi·ªán sau khi t·∫£i trang.");
            }

            // üëâ Click n√∫t Import
            System.out.println("B·∫Øt ƒë·∫ßu ch·ªù n√∫t Import...");
            try {
                WebElement importButton = wait.until(ExpectedConditions.elementToBeClickable(
                        By.xpath("//button[.//span[contains(text(),'Import')]]"))); 
                System.out.println("ƒê√£ ch·ªù n√∫t Import xu·∫•t hi·ªán v√† c√≥ th·ªÉ click.");
                
                // Scroll t·ªõi n√∫t Import n·∫øu b·ªã khu·∫•t v√† click b·∫±ng JavaScript
                ((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView(true);", importButton);
                Thread.sleep(500);
                ((JavascriptExecutor) driver).executeScript("arguments[0].click();", importButton);
                System.out.println("ƒê√£ click n√∫t Import.");
            } catch (TimeoutException e) {
                System.out.println("Kh√¥ng t√¨m th·∫•y n√∫t Import, ch·ª•p m√†n h√¨nh ƒë·ªÉ debug...");
                takeScreenshot("import_button_not_found");
                throw e;
            }

            // Ch·ª•p m√†n h√¨nh sau khi click Import
            takeScreenshot("after_import_click");

            // üëâ ƒê·ª£i v√† t√¨m input file trong popup
            System.out.println("B·∫Øt ƒë·∫ßu ch·ªù input file popup...");
            WebElement fileInput = wait.until(ExpectedConditions.presenceOfElementLocated(
                    By.xpath("//input[@type='file']")));
            System.out.println("ƒê√£ t√¨m th·∫•y input file popup.");
            
            // üëâ L·∫•y ƒë∆∞·ªùng d·∫´n tuy·ªát ƒë·ªëi t·ªõi file Excel
            File file = new File("src/test/resources/import-template.xlsx");
            if (!file.exists()) {
                throw new FileNotFoundException("Kh√¥ng t√¨m th·∫•y file Excel t·∫°i: " + file.getAbsolutePath());
            }
            String fullPath = file.getAbsolutePath();
            System.out.println("ƒê∆∞·ªùng d·∫´n file: " + fullPath);

            // üëâ G·ª≠i file v√†o input
            System.out.println("Tr∆∞·ªõc khi sendKeys, value input file: " + fileInput.getAttribute("value"));
            fileInput.sendKeys(fullPath);
            System.out.println("Sau khi sendKeys, value input file: " + fileInput.getAttribute("value"));

            // üëâ Trigger s·ª± ki·ªán change cho input file
            ((JavascriptExecutor) driver).executeScript(
                "arguments[0].dispatchEvent(new Event('change', { bubbles: true }))", fileInput);
            System.out.println("ƒê√£ trigger s·ª± ki·ªán change.");

            // Ch·ª•p m√†n h√¨nh sau khi upload
            takeScreenshot("after_file_upload");

            // üëâ ƒê·ª£i v√† click n√∫t x√°c nh·∫≠n n·∫øu c√≥
            System.out.println("B·∫Øt ƒë·∫ßu ch·ªù n√∫t X√°c nh·∫≠n (n·∫øu c√≥)...");
            try {
                WebElement confirmBtn = wait.until(ExpectedConditions.elementToBeClickable(
                    By.xpath("//button[.//span[contains(text(),'X√°c nh·∫≠n')]]")));
                confirmBtn.click();
                System.out.println("ƒê√£ click n√∫t X√°c nh·∫≠n.");
            } catch (TimeoutException e) {
                System.out.println("Kh√¥ng t√¨m th·∫•y n√∫t x√°c nh·∫≠n, c√≥ th·ªÉ kh√¥ng c·∫ßn thi·∫øt");
            }

            // üëâ ƒê·ª£i th√¥ng b√°o th√†nh c√¥ng ho·∫∑c l·ªói
            System.out.println("B·∫Øt ƒë·∫ßu ch·ªù th√¥ng b√°o k·∫øt qu·∫£...");
            try {
                WebElement resultMessage = wait.until(ExpectedConditions.presenceOfElementLocated(
                    By.xpath("//div[contains(@class,'success') or contains(@class,'error')]")));
                System.out.println("K·∫øt qu·∫£ upload: " + resultMessage.getText());
            } catch (TimeoutException e) {
                System.out.println("Kh√¥ng t√¨m th·∫•y th√¥ng b√°o k·∫øt qu·∫£");
            }

            // Ch·ª•p m√†n h√¨nh cu·ªëi c√πng
            takeScreenshot("final_state");

        } catch (Exception e) {
            System.out.println("L·ªói khi th·ª±c hi·ªán test: " + e.getMessage());
            e.printStackTrace();
            takeScreenshot("error_state");
            throw e;
        }
    }

    private void takeScreenshot(String name) {
        try {
            TakesScreenshot ts = (TakesScreenshot)driver;
            File screenshot = ts.getScreenshotAs(OutputType.FILE);
            File destFile = new File("screenshot_" + name + ".png");
            org.openqa.selenium.io.FileHandler.copy(screenshot, destFile);
            System.out.println("ƒê√£ ch·ª•p m√†n h√¨nh: " + destFile.getAbsolutePath());
        } catch (Exception e) {
            System.out.println("Kh√¥ng th·ªÉ ch·ª•p m√†n h√¨nh: " + e.getMessage());
        }
    }

    @AfterMethod
    public void teardown() {
        if (driver != null) {
            driver.quit();
        }
    }
}
